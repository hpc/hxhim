name: HXHIM

on: [push, pull_request]

env:
  BUILD_TYPE: Debug
  HXHIM_ENV: hxhim_env.sh

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        container: ["ubuntu:18.04", "ubuntu:20.04", "ubuntu:21.04", "centos:7", "centos:8"]
        mpi: ["openmpi", "mpich"]
        async_puts: ["On", "Off"]

    env:
      BUILD_NAME: "build"
      SWHOME: "/tmp"

    container:
      image: ${{matrix.container}}

    steps:
    - uses: actions/checkout@v2

    - name: Set up environment script
      run: echo "#/usr/bin/env bash" > "${{env.HXHIM_ENV}}"

    - name: Get Ubuntu Packages
      if: startsWith(matrix.container, 'ubuntu:')
      run: |
        contrib/ci/ubuntu.sh ${{matrix.mpi}}
        contrib/ci/ga-set-env.sh "CC=$(which gcc-11)" "CXX=$(which g++-11)" >> "${{env.HXHIM_ENV}}"
        dpkg -L "lib${{matrix.mpi}}-dev" | grep ".*\.so"

    - name: Get CentOS 7 Packages
      if: matrix.container == 'centos:7'
      run: |
        source contrib/ci/centos7.sh ${{matrix.mpi}}
        contrib/ci/ga-set-env.sh "CC=$(which gcc)" "CXX=$(which g++)" >> "${{env.HXHIM_ENV}}"

    - name: Get CentOS 8 Packages
      if: matrix.container == 'centos:8'
      run: |
        source contrib/ci/centos8.sh ${{matrix.mpi}}
        contrib/ci/ga-set-env.sh "CC=$(which gcc)" "CXX=$(which g++)" >> "${{env.HXHIM_ENV}}"
        rpm -ql "${{matrix.mpi}}-devel" | grep ".*\.so"

    - name: Build Dependencies
      run: |
        source "${{env.HXHIM_ENV}}"
        source contrib/hxhim_dependencies.sh --OFI --NO_ROCKSDB --NO_JEMALLOC "${HOME}" "${BUILD_NAME}" "${SWHOME}" CC="${CC}" CXX="${CXX}"
        contrib/ci/ga-set-env.sh >> "${{env.HXHIM_ENV}}"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        source "${{env.HXHIM_ENV}}"
        cmake --version
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DDBBENCH=On

    - name: Build
      # Build your program with the given configuration
      run: |
        source "${{env.HXHIM_ENV}}"
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel

    - name: Test
      run: |
        source "${{env.HXHIM_ENV}}"
        cd ${{github.workspace}}/build
        if [[ "${{matrix.async_puts}}" == "On" ]]; then export HXHIM_START_ASYNC_PUTS_AT=32768; fi
        mpirun -np 1 ${ALLOW_RUN_AS_ROOT} test/googletest
      env:
        GTEST_COLOR: 1
        ALLOW_RUN_AS_ROOT: ${{matrix.mpi == 'openmpi' && '--allow-run-as-root' || ''}}

    - name: Install
      run: |
        cd ${{github.workspace}}/build
        make install

    - name: Test Install
      if: startsWith(matrix.mpi, 'openmpi') && startsWith(matrix.container, 'centos:')
      run: |
        source "${{env.HXHIM_ENV}}"
        export HXHIM_PREFIX="$(cmake -LA -N ${{github.workspace}}/build | grep CMAKE_INSTALL_PREFIX:PATH | awk -F '=' '{ printf $2 }')"
        export LD_LIBRARY_PATH="${HXHIM_PREFIX}/lib:${LD_LIBRARY_PATH}"
        export PKG_CONFIG_PATH="${HXHIM_PREFIX}/lib/pkgconfig:${PKG_CONFIG_PATH}"
        pkg-config --cflags hxhim
        pkg-config --libs hxhim
        ${CC} -c $(pkg-config --cflags --libs hxhim) -Iinclude examples/hxhim/print_results.c -o print_results.o
        ${CXX} $(pkg-config --cflags --libs hxhim) -Iinclude examples/hxhim/cli.cpp print_results.o -o cli
        echo | ./cli
        ${CC} $(pkg-config --cflags --libs hxhim) examples/hxhim/{puts.c,print_results.c,timestamps.c,spo_gen.c} -o puts
        ./puts 100000 1
